# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: calico-config
#   namespace: kube-system
# data:
#   # Configure Calico to use VXLAN encapsulation for cross-node communication
#   veth_mtu: "1440"
#   vxlan_mtu: "1440"
# ---
# apiVersion: v1
# kind: DaemonSet
# metadata:
#   name: calico-node
#   namespace: kube-system
# spec:
#   selector:
#     matchLabels:
#       k8s-app: calico-node
#   template:
#     metadata:
#       labels:
#         k8s-app: calico-node
#     spec:
#       hostNetwork: true
#       containers:
#         - name: calico-node
#           image: calico/node:v3.20.0
#           env:
#             - name: IP_AUTODETECTION_METHOD
#               value: "can-reach=www.google.com"
#           volumeMounts:
#             - name: var-log
#               mountPath: /var/log/calico
#           securityContext:
#             privileged: true
#       volumes:
#         - name: var-log
#           hostPath:
#             path: /var/log/calico
# ---
# apiVersion: rbac.authorization.k8s.io/v1
# kind: ClusterRole
# metadata:
#   name: calico-node
# rules:
#   # Allow Calico to manage network policies
#   - apiGroups: [""]
#     resources:
#       - pods
#       - namespaces
#     verbs:
#       - get
#       - list
#       - watch
#   - apiGroups: ["networking.k8s.io"]
#     resources:
#       - networkpolicies
#     verbs:
#       - get
#       - list
#       - watch
#   # Allow Calico to manage nodes
#   - apiGroups: [""]
#     resources:
#       - nodes
#     verbs:
#       - get
#       - list
#       - watch
#       - update
#       - patch
#   # Allow Calico to manage IP pools
#   - apiGroups: ["crd.projectcalico.org"]
#     resources:
#       - ippools
#     verbs:
#       - get
#       - list
#       - watch
# ---
# apiVersion: rbac.authorization.k8s.io/v1
# kind: ClusterRoleBinding
# metadata:
#   name: calico-node
# roleRef:
#   apiGroup: rbac.authorization.k8s.io
#   kind: ClusterRole
#   name: calico-node
# subjects:
#   - kind: ServiceAccount
#     name: calico-node
#     namespace: kube-system