elk: 
  namespace: elk

  elasticsearch:
    image: "docker.elastic.co/elasticsearch/elasticsearch:7.10.0"
    name: elasticsearch
    replicas: 1
    port: 9200
    targetPort: 9200
    nodePort: 31174
    protocol: TCP
    type: ClusterIP
    resources:
      requests:
        memory: "2Gi"
        cpu: "200m"
      limits:
        memory: "2Gi"
        cpu: "500m"
  
  filebeat:
    name: filebeat
    image: "docker.elastic.co/beats/filebeat:7.10.0"
    replicas: 1      
    clusterRole: filebeat-cluster-role
    clusterRoleBinding: filebeat-cluster-role-binding
    resources:
      limits:
        memory: "500Mi"
      requests:
        cpu: "100m"
        memory: "200Mi"

  logstash:
    name: logstash
    image: "docker.elastic.co/logstash/logstash:7.10.0"
    replicas: 1
    containerPort: 5044
    protocol: TCP
    port: 5044
    targetPort: 5044

  kibana:
    name: kibana
    image: "docker.elastic.co/kibana/kibana:7.10.0"
    replicas: 1
    containerPort: 5601
    protocol: TCP
    port: 5601
    targetPort: 5601
    nodePort: 30228
    type: ClusterIP

monitoring:
  namespace: monitoring

  grafana:
    image: "grafana/grafana:latest"
    name: grafana
    replicas: 1
    service:
      port: 3000
      targetPort: 3000
      type: ClusterIP

  prometheus:
    image: "prom/prometheus:latest"
    name: prometheus
    replicas: 1
    service:
      port: 9090
      targetPort: 9090
      type: ClusterIP
    configMapName: prometheus-config

  prometheusConfigMap:
    name: prometheus-config

  ingress:
    enabled: true
    name: monitoring-ingress
    grafana:
      host: grafana.9onfashions.com
    prometheus:
      host: prometheus.9onfashions.com