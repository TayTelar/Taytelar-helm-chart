replicaCount: 1

frontend:
  image:
    repository: 794038231860.dkr.ecr.ap-south-1.amazonaws.com/taytelar-frontend
    tag: latest
  service:
    type: ClusterIP
    port: 80
    targetPort: 80

backend:
  image:
    repository: 794038231860.dkr.ecr.ap-south-1.amazonaws.com/taytelar-backend
    tag: latest
  service:
    type: ClusterIP
    port: 8081
    targetPort: 8081
  spring:
    profile: dev
  pullPolicy: IfNotPresent

env:
  aws:
    region: ap-south-1
    access_key: test
    secret_key: test
    bucketName: test

thirdparty:
  razopay_api:
    id: test
    secret: test
  fastsms_api:
    id: test
    url: test
  google_maps_api:
    key: test
    url: test

database:
  postgres:
    name: postgres-service
    image: postgres:13
    username: test
    password: test
    dbname: Tay-Telar
    host: postgres-service
    port: 5432
    targetPort: 5432
    replicaCount: 1
    enabled: true
    storage:
      size: 1Gi

  mongodb:
    name: mongo-service
    image: mongo:latest
    dbname: TayTelar
    enabled: true
    host: mongo-service
    port: 27017
    targetPort: 27017
    user: mongo_user
    storage:
      size: 1Gi

  busybox:
  replicaCount: 1
  image:
    repository: busybox
  logCommand: "sh -c 'tail -f /var/log/pods/taytelar-ns_backend-*/backend/*.log'"
  volumeMount:
    path: /var/log/pods
  volume:
    type: DirectoryOrCreate

  hpa:
  enabled: true
  name: backend-hpa
  minReplicas: 1
  maxReplicas: 20
  targetCPUUtilizationPercentage: 80

ingress:
  enabled: true
  name: frontend-backend-ingress
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/group.name: taytelar-ingress-group
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
  host: dev.taytelar.com
  backend:
    service:
      frontend:
        name: frontend-service
        port: {{ .Values.frontend.service.port }}
      backend:
        name: backend-service
        port: {{ .Values.backend.service.port }}
